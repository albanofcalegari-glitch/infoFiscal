"""
Script para verificar si los servicios WSFE est√°n habilitados en AFIP
"""

import sys
from pathlib import Path

# Agregar src al path
sys.path.insert(0, str(Path(__file__).parent / 'src'))

from arca_service_simple import ARCAServiceSimple

def verificar_servicios_afip():
    """Verificar estado de servicios web en AFIP"""
    
    cuit = "20321518045"
    cert_path = Path(__file__).parent / 'certs' / 'certificado.crt'
    key_path = Path(__file__).parent / 'certs' / 'clave_privada.key'
    
    print("=== VERIFICACI√ìN SERVICIOS AFIP ===")
    print(f"CUIT: {cuit}")
    print()
    
    if not cert_path.exists() or not key_path.exists():
        print("‚ùå Certificados no encontrados")
        return False
    
    print("‚úÖ Certificados OK")
    
    try:
        # Crear servicio optimizado
        service = ARCAServiceSimple(cuit, cert_path, key_path, testing=False)  # PRODUCCION
        
        # Verificar conectividad b√°sica
        from arca_service_simple import verificar_conexion_afip
        conectividad, mensaje = verificar_conexion_afip()
        if not conectividad:
            print(f"‚ùå Sin conectividad a AFIP: {mensaje}")
            return False
        
        # Intentar autenticaci√≥n WSAA
        print("üîÑ Probando autenticaci√≥n WSAA...")
        auth_data = service.autenticar()
        if auth_data and 'token' in auth_data:
            print("‚úÖ AUTENTICACI√ìN WSAA EXITOSA!")
            print("‚úÖ SERVICIOS WEB HABILITADOS CORRECTAMENTE")
            
            # Probar consulta WSFE b√°sica
            print("üîÑ Probando consulta WSFE...")
            ultimo = service.wsfe_fecomp_ultimo_autorizado(1, 1)
            
            if ultimo is not None:
                print("‚úÖ CONSULTA WSFE EXITOSA!")
                print(f"√öltimo comprobante autorizado: {ultimo}")
                return True
            else:
                print("‚ö†Ô∏è WSFE responde pero sin datos o sin permisos")
                return True
                
        else:
            print("‚ùå ERROR EN AUTENTICACI√ìN WSAA")
            print("\nPOSIBLES CAUSAS:")
            print("1. Servicios web NO habilitados en AFIP")
            print("2. Certificado no asociado al CUIT")
            print("3. OpenSSL no instalado correctamente")
            print("4. Error en firma del TRA")
            return False
            
    except Exception as e:
        print(f"‚ùå ERROR: {e}")
        return False

if __name__ == "__main__":
    exito = verificar_servicios_afip()
    
    print("\n" + "="*50)
    if exito:
        print("üéâ SERVICIOS AFIP FUNCIONANDO!")
        print("Ya pod√©s usar descargas reales de facturas")
    else:
        print("‚ö†Ô∏è SERVICIOS AFIP NO DISPONIBLES")
        print("\nPR√ìXIMOS PASOS:")
        print("1. Ir a AFIP ‚Üí Administrador de Relaciones")
        print("2. Habilitar servicio 'wsfe' para tu CUIT")
        print("3. Asociar el certificado al servicio")
        print("4. Esperar activaci√≥n (puede tomar horas)")
        print("5. Ejecutar este script nuevamente")
        print("\nMientras tanto, la app funciona en modo simulaci√≥n")